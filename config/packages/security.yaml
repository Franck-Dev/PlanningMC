security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    access_denied_url: noAccess
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: in_database

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: security_logout
                target: home

            pattern: ^/ 

            user_checker: App\Security\UserChecker # activation du UserChecker

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_CE_MOULAGE, ROLE_SUPERVISEUR, ROLE_PROGRAMMEUR]
        ROLE_CE_POLYM:    [ROLE_PLANIF, ROLE_REGLEUR]
        ROLE_CE_MOULAGE:  [ROLE_USER]
        ROLE_RESP_POLYM:  [ROLE_CE_POLYM, ROLE_CE_MOULAGE]
        ROLE_REGLEUR:     [ROLE_USER]
        ROLE_SUPERVISEUR: [ROLE_RESP_POLYM, ROLE_GESTIONAIRE]
        ROLE_METHODES:    [ROLE_USER]
        ROLE_GESTIONAIRE: [ROLE_USER,ROLE_PLANIF]
        ROLE_PROGRAMMEUR: [ROLE_METHODES, ROLE_USER]
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/METHODES, roles: ROLE_METHODES }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/Demandes, roles: ROLE_CE_MOULAGE }
        #- { path: ^/security, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
