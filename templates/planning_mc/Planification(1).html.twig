{% extends 'base.html.twig' %}

{% block title %}Listes des cycles de polymérisations{% endblock %}
{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('build/vis.css') }}">
    <style type="text/css">
        table {
             width: 100%;
             font-size: 2vmin;
        }
        th {
            font-size: 2.5vmin;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        input {
            border: 2px solid blue;
            border-radius: 4px;
            background-color: #f1f1f1;
            font-size: 2.0vh;
            font-size: 2vmin;
          }
        select {
            width: 100%;
            border: 2px solid blue;
            border-radius: 4px;
            background-color: #f1f1f1;
            font-size-adjust:unset;
        }
        .btn.btn-info.btn-block {
            -webkit-text-fill-color: aliceblue;
            background-color: blue;
        }
        .button {
            border: 2px solid blue;
            border-radius: 40px;
            background-color: #2b21b8;
            -webkit-text-fill-color: aliceblue;
        }
        
	</style>
{%endblock%}
{% block body %}
<div class="row">
	<div class="col-md-10">
        <h1>Listing des Demandes de créneaux de polymérisation en date du :</h1>
    </div>
    <div class="col-md-2">
        <div class="input-group">
            <form action="{{ path('Planification')}}" method="POST">
                <input type="date" id="datejourplanif" name="DatedebPlan" value={{datedeb|date('Y-m-d')}}>
                <button type="submit" class="btn btn-success" value="Submit"style="border-radius:40px;background-color:blue;color:white">Valider</button>
            </form>
        </div>
    </div>
</div>
 {#<pre>{{dump(items)}}</pre>#}  
 {#<pre> {{ dump(app.request.attributes.get("demande")) }} </pre>#}    
    <div class="table-responsive">
        <table class="table">
            <thead>		
            </thead>
                <table class="table">	
                {% set start_jour = datedeb | date('d') %}<!-- Recherche du n° du jour de départ de la semaine n+1-->
                {% set end_jour = datefin | date('d') %}<!-- Recherche du n° du jour de fin de la semaine n+1 -->
                {% for day in  start_jour .. start_jour+6  %}<!-- Boucle sur la semaine concernée -->
                    {% set jour = day-start_jour %}<!-- Variable permettant de recaler l'offset dût à la boucle -->
                    {% set myDate = datedeb|date_modify(['+',jour,'days']|join) %}<!-- On prend en compte l'offset pour retrouver le premier jour de la semaine -->
                    {% set myDa = myDate|localizeddate('none', 'none', null, null, 'EEEE') %}<!-- Nom des jours de la semaine -->
                    {% set myDat = myDate|date('d/m/y')|upper %}<!-- Mise en forme des jours -->
                    <tr>
                        <!-- Mise en forme du bouton de validation de la plannification -->
                        <td colspan="11">
                            <button type="button" class="btn btn-info btn-block" font="white">
                                <i href="" data-toggle="modal" data-target="" data-id={{ myDat }}>
                                        <span>SOUMETTRE LES DEMANDES DU {{myDa}} {{myDat}}</span></a>
                            </button>
                        </td>
                    </tr>
                    <thead>
                            <tr> 
                                <!-- Titre du tableau -->
                                    <th> Jour </th>	
                                    <th> Id </th>
                                    <th> Cycle </th>
                                    <th> Date et Heure Début </th>
                                    <th> Heure Fin Théorique </th>
                                    <th> Nombre Outillages </th>
                                    <th> Plannifié </th>
                                    <th> Récurrence </th>
                                    <th> Moyen Utilisé</th>
                                    <th> Action </th>
                    
                                </tr>
                    </thead>
                    {% for test in tests if test.datePropose|date('d/m/Y') == myDate|date('d/m/Y') %}<!-- Boucle sur toutes les demandes effectuées -->	
                    {% set durecycle = test.cycle.duree | date('H:i') %}<!-- Mise au format des durée de polymérisation -->
                    {% set dureecycle = [durecycle|date('H'),'hours',' ',durecycle|date('i'),'minutes']|join %}	
                    {% set nominputHF = ['HeureFin',test.Id]|join %}<!-- Conception des noms des inputs contenant la date de fin après calculfin -->
                    {% set nominputHD = ['HeureDebut',test.Id]|join %}<!-- Conception des noms des inputs contenant la date de debut après calculfin -->
                    {% set nominputS = ['Statut',test.Id]|join %}<!-- Conception des noms des inputs contenant le statut de plannification -->
                    {% set nomselectM = ['Choixmoyen',test.Id]|join %}<!-- Conception des noms des inputs contenant la sélection du moyen utilisé -->
                    {% set HFId = ['Hfin',test.Id]|join %}<!-- Conception des noms des inputs cachés contenant la date de fin après calculfin -->
                    {% set HDId = ['Hdeb',test.Id]|join %}<!-- Conception des noms des inputs cachés contenant la date de debut après calculfin -->
                    {% set StatutId = ['Statut',test.Id]|join %}<!-- Conception des noms des inputs cachés contenant le statut de plannification -->
                    {% set MoyenId = ['Moyen',test.Id]|join %}<!-- Conception des noms des inputs cachés contenant la sélection du moyen utilisé -->
                    {% set dateurdeb = [test.datepropose|date('Y/m/d'),' ',test.heurepropose|date('H:i')]|join %}<!-- Mise en forme de la date et heure de départ de polymérisation -->	

                    <tbody>
                        <tr {% if (test.plannifie == 1) %}
                                style="background-color:green"
                            {% else %}
                            style="background-color:red"
                            {% endif %} 
                        >
                            <td></td>
                            <td>{{ test.Id }}</td>
                            <td>{{ test.cycle.nom }}</td>
                            <td><input id={{nominputHD}} type="datetime-local" name="appt-time" value={{ dateurdeb|date('Y-m-d\\TH:i') }} onblur=calculfin('{{durecycle|date('H:i')}}',this.value,{{test.Id}}) pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}" required></td><!-- Calcul de la nouvelle date de fin suite modification de la date de départ -->
                            <td><input id={{nominputHF}} type="datetime-local" name="appt-time" value={{ dateurdeb|date_modify( dureecycle )|date('Y-m-d\\TH:i') }} pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}" required> </td><!-- Intégration de la date et heure de fin suivant la durée du cycle -->
                            <td>{{ test.outillages }}</td>
                            <td><input id={{nominputS}} type="text" value={{ test.plannifie ? 'OUI' : 'NON'}} readonly></td>
                            <td><input id={{nominputS}} type="checkbox" value={{ test.reccurance ? 'OUI' : 'NON'}} ></td>
                            <td>{% if (test.plannifie == 0) %}
                                    <select id='{{nomselectM}}'>
                                        {% for numero in items %}
                                            <option value={ numero.libelle }>{{ numero.libelle }}</option>
                                        {% endfor %}   
                                    </select><br>
                                    {{ test.moyenutilise }}
                                {% else %}
                                    <input id='{{nomselectM}}' type="text" value={{ test.moyenutilise.libelle }} readonly>
                                {% endif %}
                            </td>
                            <td>
                                <form action="{{ path('Planif_Demandes', {'id': test.id}) }}" method="POST" onclick=validation('{{test.Id}}','{{test.plannifie}}')>
                                    <input type="hidden" name='{{HDId}}' />
                                    <input type="hidden" name='{{HFId}}' />
                                    <input type="hidden" name='{{StatutId}}' />
                                    <input type="hidden" name='{{MoyenId}}' />
                                    {% if (test.plannifie == 0) %}
                                        <button type="submit" class="btn btn-success" value="Submit" style="border-radius:40px;background-color:blue;color:white">Valider</button>
                                    {% else %}
                                        <button type="submit" class="btn btn-success" value="Submit" style="border-radius:40px;background-color:red;color:white">Modifier</button>
                                    {% endif %}
                                </form>
                            </td>
                        </tr>
                    {% endfor %}
                {% endfor %}
                </tbody>
            </table>
                <h1>Prévisualisation des créneaux de polymérisations ✅</h1>
 		<div id="visualization">
		</div>
		
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                	<span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
				{{ render(controller('App\\Controller\\PlanningMCController::DemandesCrea',{'user': app.user}))}}
            </div>
        </div>
    </div>
</div>
        </div>
   

{% endblock %}
{% block javascripts %}
<script src="{{ asset('build/vis.js') }}"></script>
<script src="{{ asset('build/handlebars.min.js') }}"></script>
    <script src="{{ asset('build/prototype.js') }}"></script>
    <script src="{{ asset('build/sweetalert.min.js') }}"></script>
    <script id="item-template" type="text/x-handlebars-template">
            <table class="infos">
                <tr>
                    <td colspan="3" class="programmes">{% verbatim %}{{programmes}}{% endverbatim %}</td>
                    <th><img src="{{asset('build/images/{{statut}}.png')}}" width="31" height="20" alt="{% verbatim %}{{icone}}{% endverbatim %}"></th>
                    <td colspan="3" class="statut">{% verbatim %}{{statut}}{% endverbatim %}</td>
                </tr>
            </table>
    </script>
    <script id="item-popup" type="text/x-handlebars-template">
            <table class="infos">
                <tr>
                    <td colspan="3" class="programmes">{% verbatim %}{{programmes}}{% endverbatim %}</td>
                    <td colspan="3" class="statut">{% verbatim %}{{statut}}{% endverbatim %}</td>
                </tr>
            </table>
    </script>
<script type="text/javascript">
const lang = navigator.language; // "de_DE"; // "en_US"; // 
const locale = (lang && lang !== undefined) ? lang.match(/^\w{2}/)[0] : 
    (lang === "de" || lang === "fr" || lang === "it" || lang === "nl") ? lang : "en"; // "en"; // "de"; //
        // create a handlebars template
        var source = document.getElementById('item-template').innerHTML;
        var template = Handlebars.compile(source);
        console.log(template)
var conteneur = document.getElementById ('visualization');

var groups = {{moyens|raw}};

var items = new vis.DataSet ({{taches|raw}});

var options = {
            template:template,
            stack: true,
            start: '{{datedeb|date('Y-m-d\\TH:i:sP') }}',
            end: '{{datefin|date('Y-m-d\\TH:i:sP') }}',
            orientation: 'top',
            editable : { 
                add : true , // ajoute de nouveaux éléments en double tapant  
                updateTime : true , // déplace les éléments horizontalement  
                updateGroup : true , // déplace les éléments d'un groupe à un autre  
                remove : true , // supprime un élément en appuyant sur le bouton de suppression en haut à droite  
                overrideItems : false  // autorise ces options à remplacer item.editable
            },
            onUpdate: function (item, callback) { 
                //prettyPromptItemUpdate('Données de polymérisation', 'Edition', item, groups, timeline, callback); 
                item.content = prompt('Edit items text:', item.content);
            }
        };
var timeline = new vis.Timeline (conteneur, items, groups, options);
//console.log(options.end);

function calculfin (dureCycle,heureDeb,i)
{
    var i=i;
    //Conversion de la durée du cycle en heures minutes pour ajout à la date de départ
    var dureCycle="1970-01-01T"+dureCycle;
    var durCycle = new Date(dureCycle);
//Idem conversion durée pour date et heure de départ
    console.log(heureDeb);
    var heureDeb = new Date(heureDeb);
//Ajout du temps de cycle à la date de départ pour calcul date de fin
    var newFin=heureDeb.getTime()+durCycle.getTime()+7200000;
    newFin= new Date(newFin);
//Reconstitution du format de la date
    var dateFin = newFin.toISOString().slice(0,10);
    //dateFin=dateFin.replace( /\-/g,"/");
    var heurefin= newFin.toISOString().slice(11,16);
    var newdatefin=dateFin+"T"+heurefin;
    alert('La nouvelle fin sera à  ' + newdatefin);
//Renvoie de la date de fin dans l'input du heureFin
console.log("HeureFin"+i);
    var HF = document.getElementById("HeureFin"+i);
    HF.value=newdatefin; 
};
//Validation de la ligne après submit (statut à oui et couleur verte)
function validation(x,StatPlan){
    
    console.log(document.getElementsByTagName("i"));
//Attribution de la couleur vert pour validation de la ligne(demande)
    var couleur = document.createAttribute("bgcolor"); 
    couleur.nodeValue = "green"; 
    document.getElementsByTagName("tr")[2].setAttributeNode(couleur)
//Validation de la demande avec passage du statut plannifié à "OUI"
    var statut = document.getElementById("Statut"+x);
    statut.value="OUI";
//Renvoie des valeurs dans les cellules masquées pour récupération dans controller
    //Si modification statut à 1 sinon 0
    if(StatPlan==1){
        document.querySelector('[name=Statut'+x+']').value = "0";
        document.querySelector('[name=Moyen'+x+']').value = null;
    }
    else{
        //alert(document.getElementById("Choixmoyen"+x).options[document.getElementById('Choixmoyen'+x).selectedIndex].text);
        document.querySelector('[name=Statut'+x+']').value = "1";
        document.querySelector('[name=Moyen'+x+']').value = document.getElementById("Choixmoyen"+x).options[document.getElementById('Choixmoyen'+x).selectedIndex].text;
    }    
    //Reformatage de la date sans le T
    var DateHDeb=document.getElementById("HeureDebut"+x).value;
    var DateDeb=DateHDeb.slice(0,10);
    var HeureDeb=DateHDeb.slice(11,16);
    var newdDateHDeb=DateDeb+" "+HeureDeb;
    var DateHFin=document.getElementById("HeureFin"+x).value;
    var DateFin=DateHFin.slice(0,10);
    var HeureFin=DateHFin.slice(11,16);
    var newdDateHFin=DateFin+" "+HeureFin;
    document.querySelector('[name=Hfin'+x+']').value = newdDateHFin;
    document.querySelector('[name=Hdeb'+x+']').value = newdDateHDeb;
    
    //Envoie de la requette AJAX pour modification du statut et du moyen
    //$(document).ready(function () {
        //$.ajax({
                //method: "POST",
                //data: {Hfin: newdDateHFin, Hdeb: newdDateHDeb, Moyen: document.getElementById("Choixmoyen"+x).options[document.getElementById('Choixmoyen'+x).selectedIndex].text, Statut: "1"},
                //url: "{{ path('Planif_Demandes', {'id': 'x'}) }}",
                //success: function(dat){
                           //console.log(dat);
                       //}
        //});
    //});

};

//var monAction = document.getElementById("choix moyen");
//monAction.onclick = function(){
            
//        };

</script>
{% endblock %}

