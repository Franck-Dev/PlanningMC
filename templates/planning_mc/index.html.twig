{% extends 'base.html.twig' %}

{% block title %}Planning {{ controller_name }}!{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('build/vis.css') }}">
    <style type="text/css">
        table {
            width: 100%;
            font-size: 2vmin;
        }
        .sweetalert-lg {
            width: 600px;
        }
        .gris{
            background: rgb(106, 160, 182);
        }
        .progress-wrapper {
            background: white;
            width: 100%;
            height: 18px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .progress {
            height: 50%;
            width: 90%;
            position: absolute;
            left: 0px;
            top: 5px;
            background: #63ed63;
        }

        .progress-label {
            position: absolute;
            z-index: 1;
        }

        .modal, .modal-header { 
            z-index: 10000;
            opacity:    1;
            width: 400px;
            height: 700px;
            position: absolute;
            margin: 10% auto;
            background: blue;
        }
        #visualization{
            height: 100%;
        }
        #item-template{
            height: auto;
        }
        .button{
            display:    block;
            width:  100%;
        }
        .button_menu{
            display: flex;
            flex-flow: row wrap;
        }
        .button_menu .btn_valid{
            border-radius:  10px;
            position:   absolute;
            text-align: center;
            right:  0px;
            vertical-align: middle;
            background-image:radial-gradient( blue,green);
            color:  white;
            text-decoration:    none;  
            width:  100px;
            min-width:  7%;
            height: 30px;
        }
        .vis-item.vis-range{
            min-height: 0.5em;
            border-top-left-radius:     1em;
            border-top-right-radius:    1em;
        }

    </style>
{%endblock%}    
{% block body %}

    <div class="input" id="DatePlanif">
        <input type="hidden" id="JourPlannif" value="">
    </div>
    <div id="visualization" class="conteiner-fluid">
        <div class="row">
            <h2 class="col-lg-12">Planning de la semaine </h2>
        </div>
        <div class="row">
            <div class="button_menu">
                <input type="button" id="jour" value="Aujourd'hui" class="col-xs-2">
                <input type="button" id="semaine-1" value="Semaine dernière" class="col-xs-2">
                <input type="button" id="semaine" value="Semaine en cours" class="col-xs-2">
                <input type="button" id="semaine+1" value="Semaine suivante" class="col-xs-2">
                {% if is_granted('ROLE_PLANIF') %}
                    <a href="{{ path('CreaPolymRecur', {'user': app.user}) }}" class="btn_valid">Plannification</a>
                {% endif %}
            </div>
        </div>
           <!-- Modal -->  
            <div id="Modale" class="modal" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        {% if is_granted('ROLE_CE_POLYM') %}
                            <div id="Modale" class="modal-body"></div>
                            {{ render(controller('App\\Controller\\PlanningMCController::CreaDemPolym',{'user': app.user}) )}}
                            <button type="button" class="success" value="Valider">
                                    <span aria-hidden="true"></span>
                            </button>
                        {% elseif is_granted('ROLE_REGLEUR') %}
                            <div id="Modale" class="modal-body"></div>
                            
                            <button type="button" class="success" value="Modifier">
                                    <span aria-hidden="true"></span>
                            </button>
                        {% endif %}
                    </div>
                </div>
            </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script src="{{ asset('build/vis.js') }}"></script>
    <script src="{{ asset('build/handlebars.min.js') }}"></script>
    <script src="{{ asset('build/prototype.js') }}"></script>
    <script src="{{ asset('build/jquery.min.js') }}"></script>
    <script src="{{ asset('build/sweetalert.min.js') }}"></script>
    <script id="item-template" type="text/x-handlebars-template"> 
            <table class="table-condensed" style="height: 10px">
                <tr>
                    <td colspan="3" class="programmes" style="font-size: 0.7em">{% verbatim %}{{programmes}}{% endverbatim %}</td>
                    <th><img src="{{asset('build/images/{{statut}}.png')}}" width="31" height="20" alt="{% verbatim %}{{icone}}{% endverbatim %}"></th>
                    <td colspan="3" class="statut" style="font-size: 0.7em">{% verbatim %}{{statut}}{% endverbatim %}</td>
                </tr>
            </table>
    </script>
    <script id="item-popup" type="text/x-handlebars-template">
            <table class="infos" style="height: 20px;">
                <tr>
                    <td colspan="3" class="programmes">{% verbatim %}{{programmes}}{% endverbatim %}</td>
                    <td colspan="3" class="statut">{% verbatim %}{{statut}}{% endverbatim %}</td>
                </tr>
            </table>
    </script>
    <script type="text/javascript">
    const lang = navigator.language; // "de_DE"; // "en_US"; // 
    const locale = (lang && lang !== undefined) ? lang.match(/^\w{2}/)[0] : 
    (lang === "de" || lang === "fr" || lang === "it" || lang === "nl") ? lang : "en"; // "en"; // "de"; //
        // create a handlebars template
        var source = document.getElementById('item-template').innerHTML;
        var template = Handlebars.compile(source);
        console.log(source)
        var conteneur = document.getElementById ('visualization');
        
        var groupsold = {{Moyens|raw}};

        var groups = new vis.DataSet();
      
        groups.add({{Moyens|raw}});
        groups.add({{Ssmoyen|raw}});

        var items = new vis.DataSet ({{Taches|raw}});
        var groupIds = groups.getIds();
        var randomGroupId = groupIds[Math.floor(Math.random() * groupIds.length)];
        var itemsold = new vis.DataSet ([
            {id: 1, programmes: 'PRP10001', statut: 'PLANNIFIE', start: '2019-02-19 22:00:00', end: '2019-02-20 02:00:00', group: 2, className: 'pink', title: 'Prendre les outillages en salle de moulage'},
            {id: 2, programmes: 'PRP10002', statut: 'VALIDE', start: '2019-02-19 23:00:00', end: '2019-02-20 05:15:00', group: 1, style: 'background-color: red', satut: 'Plannifie', title: ['OT98765','OT123456']},
            {id: 3, programmes: 'PRP10003', statut: 'ENCOURS', start: '2019-02-20 06:00:00', end: '2019-02-20 18:10:00', group: 1, style: 'background-color: green'},
            {id: 4, programmes: 'PRP10004', statut: 'TERMINE', start: '2019-02-20 22:00:00', end: '2019-02-21 08:50:00', group: 4, style: 'background-color: yellow'},
            {id: 5, programmes: 'PRP10005', statut: 'REMPLACE', start: '2019-02-20 04:00:00', end: '2019-02-20 09:30:00', group: 2, style: 'background-color: brown'},
            {id: 6, programmes: 'PRP10006', statut: 'ANNULE', start: '2019-02-20 22:00:00', end: '2019-02-21 02:00:00', group: 1, style: 'background-color: #ed12dd'}
        ]);

        var options = {
            template:template ,
            stack: true,
            start: new Date(),
            end: new Date(1000*60*60*24*7 + (new Date()).valueOf()),
            maxHeight: 1000,
            autoResize: true,
            verticalScroll: true,
			zoomKey: "ctrlKey",
            orientation: 'top',
            groupOrder: 'content',
            visibleFrameTemplate: function(item) {
                if (item.visibleFrameTemplate) {
                    return item.visibleFrameTemplate;
                }
                var percentage = item.value * 100 + '%';
                return '<div class="progress-wrapper"><div class="progress" style="width:' + percentage + '" background="red"></div><label class="progress-label">' + percentage + '<label></div>';
            },
            editable : { 
                add : true , // ajoute de nouveaux éléments en double tapant  
                updateTime : true , // déplace les éléments horizontalement  
                updateGroup : false , // déplace les éléments d'un groupe à un autre  
                remove : false , // supprime un élément en appuyant sur le bouton de suppression en haut à droite  
                overrideItems : false  // autorise ces options à remplacer item.editable
            },
            
            onMove: function (item, callback) { 
                //console.log(groups._data[groups._data[item.group].nestedInGroup].content);
                //prettyPromptItemUpdate('Données de polymérisation', 'Edition', item, groups, timeline, callback); 
                //item.content = prompt('Edit items text:', item.content);
                $(document).ready(function () {
                    //console.log(items._data[item.id]);
                    //console.log(item.start);
                    //Conversion de la date pour prise en compte dans controlleur
                    var DateDeb = (item.start).toISOString().slice(0,24);
                    var DateFin = (item.end).toISOString().slice(0,24);
                    //console.log(DateDeb);
                    $.ajax({
                        method: "POST",
                        data: {id: item.id, olddatedeb: items._data[item.id].start, olddatefin: items._data[item.id].end, moyen: item.group, cycle: item.programmes, newdatedeb: DateDeb, newdatefin: DateFin},
                        url: "{{ path('Modif_Polym_Pla') }}",
                        success: function(dat){
                            console.log(dat);
                        }
                    });
                });
            }, 

            onUpdate: function(item,callback){
                var html = htmlForSweetAlert(item);
                swal({ 
                    title: "Modification des paramètres", 
                    text: item.programmes, 
                    icon: 'success',
                    buttons: {
                        cancel: {
                            text: "ANNULER",
                            value: null,
                            visible: true,
                            className: "",
                            closeModal: true,
                        },
                        confirm: {
                            text: "OK",
                            value: true,
                            visible: true,
                            className: "",
                            closeModal: true
                        }
}                   ,
                    content: html
                });
                console.log(html.selectStatut);
                item.statut=prompt('Statut',item.statut);
                callback(item);
                alert('PAUSE');
                if (html.selectStatut[html.selectStatut.selectedIndex].text!="") {
                    console.log(item.statut);
                    item.statut=html.selectStatut[html.selectStatut.selectedIndex].text;
                    callback(item); // send back adjusted item
                    console.log(item.statut);
                  }
                  else {
                    callback(null); // cancel updating the item
                  }
                console.log(swal.getState('content'));
            },

            onAdd: function (item, callback) {
                var DateDeb = (item.start).toISOString().slice(0,24);//On garde que la date, et pas l"heure
                var HeureDeb="1970-01-01"+(item.start).toISOString().slice(10,24);
                $(document).ready(function () {
                    $.ajax({
                        method: "POST",
                        data: {DateDeb: DateDeb ,Hdeb: HeureDeb, Moyen: item.group},
                        url: "{{ path('Polym_Edit') }}",
                        beforeSend : function() { // traitements JS à faire AVANT l'envoi AJAX
                         //Mettre à jour la date dans l'input pour l'url
                        },
                        success: function(data){
                            console.log(data);                           
                            $('#Modale').html(data); // affichage des résultats dans la modal
                            $('#Modale').show();
                        }
                    });
                });
                    
            },

            tooltip: {
                followMouse: true
            }
        };

        var timeline = new vis.Timeline (conteneur, items, groups, options);

        document.getElementById('visualization').onclick = function (event) {
            //var props = timeline.getEventProperties(event)
            //console.log(props);
            //console.log(event);
            //var html = htmlForSweetAlert(event); 
            //swal({ 
                //title: title, 
                //text: text, 
                //content: html, 
                //icon: "success"  
            //});
        }
        
        timeline.on('click', function (event, properties) {
            //var olddatedeb=event.time;
            //console.log(olddatedeb);
            //logEvent(event, properties);
        });

        function logEvent(event, properties) {
            var log = document.getElementById('log');
            var msg = document.createElement('div');
            msg.innerHTML = 'event=' + JSON.stringify(event) + ', ' +
            'properties=' + JSON.stringify(properties);
            log.firstChild ? log.insertBefore(msg, log.firstChild) : log.appendChild(msg);
        }

        function prettyPromptItemUpdate(title, text, item, groups, timeline, callback) { 
            var html = htmlForSweetAlert(item); 
            swal({ 
                title: title, 
                text: text, 
                content: html, 
                icon: "success"  
            });
        } 

        function htmlForSweetAlert(item) { 
            //console.log(item);
            var form = document.createElement('FORM'); 
            form.setAttribute("role", "form"); 
            form.setAttribute("class", "form-vertical"); 
        
            var divForm_row01 = document.createElement('DIV'); 
            divForm_row01.setAttribute("class", "form-group"); 
            var divTitle = document.createElement('DIV'); 
            divTitle.setAttribute("class", "col-sm-8"); 
            var labelTitle = document.createElement('LABEL'); 
            labelTitle.innerHTML = translate(locale, "titre", "title"); 
            labelTitle.setAttribute("for", "inputTitle"); 
            labelTitle.setAttribute("class", "col-form-label") 
            var inputTitle = document.createElement('INPUT'); 
            inputTitle.id = "inputTitle"; 
            inputTitle.setAttribute("class", "form-control"); 
            inputTitle.setAttribute("type", "text"); 
            inputTitle.setAttribute("value", item.programmes) 
        
            var divResources = document.createElement('DIV'); 
            divResources.setAttribute("class", "col-sm-4"); 
            var labelResources = document.createElement('LABEL'); 
            labelResources.innerHTML = translate(locale, "ressources", "resources"); 
            labelResources.setAttribute("for", "inputResources"); 
            labelResources.setAttribute("class", "col-form-label") 
            var inputResources = document.createElement('INPUT'); 
            inputResources.id = "inputResources"; 
            inputResources.setAttribute("class", "form-control"); 
            inputResources.setAttribute("type", "text"); 
            //inputResources.setAttribute("value", groups._data[groups._data[item.group].nestedInGroup].content) 
            inputResources.setAttribute("value", item.group)

            //var divStatut = document.createElement('DIV'); 
            //divStatut.setAttribute("class", "col-sm-4"); 
            //var labelStatut = document.createElement('LABEL'); 
            //labelStatut.innerHTML = translate(locale, "statut", "State"); 
            //labelStatut.setAttribute("for", "inputStatut"); 
            //labelStatut.setAttribute("class", "col-form-label") 
            //var inputStatut = document.createElement('INPUT'); 
            //inputStatut.id = "inputStatut"; 
            //inputStatut.setAttribute("class", "form-control"); 
            //inputStatut.setAttribute("type", "text"); 

            
            var divStatut = document.createElement('DIV'); 
             divStatut.setAttribute("class", "col-sm-4"); 
             var labelStatut = document.createElement('LABEL'); 
             labelStatut.innerHTML = "Statut"; 
             labelStatut.setAttribute("for", "selectStatut"); 
             labelStatut.setAttribute("class", "col-form-label") 
             var selectStatut = document.createElement('SELECT'); 
             selectStatut.id = "selectStatut"; 
             selectStatut.setAttribute("class", "form-control"); 
             var array = ["PLANNIFIE", "TERMINE", "RETARD", "ANNULER", "REMPLACER"]; 
            for (var i = 0; i < array.length; i++) { 
                var option = document.createElement("option"); 
                option.value = array[i]; 
                option.text = array[i]; 
                selectStatut.appendChild(option); 
            }; 
             selectStatut.value = item.statut; 
        
            /* row 2 */ 
            var divForm_row02 = document.createElement('DIV'); 
            divForm_row02.setAttribute("class", "form-group");   
        
            var divDateDeb = document.createElement('DIV');
            divDateDeb.setAttribute("class", "col-sm-6"); 
            var labelDateDeb = document.createElement('LABEL'); 
            labelDateDeb.innerHTML = translate(locale, "Date Début", "employees"); 
            labelDateDeb.setAttribute("for", "inputDateDeb"); 
            labelDateDeb.setAttribute("class", "col-form-label") 
            var inputDateDeb = document.createElement('INPUT'); 
            inputDateDeb.id = "inputDateDeb"; 
            inputDateDeb.setAttribute("class", "form-control"); 
            inputDateDeb.setAttribute("type", "text"); 
            inputDateDeb.setAttribute("min", 0); 
            inputDateDeb.setAttribute("value", item.start); 
        
            var divDateFin = document.createElement('DIV'); 
            divDateFin.setAttribute("class", "col-sm-6"); 
            var labelDateFin = document.createElement('LABEL'); 
            labelDateFin.innerHTML = translate(locale, "Date Fin", "estimated"); 
            labelDateFin.setAttribute("for", "inputDateFin"); 
            labelDateFin.setAttribute("class", "col-form-label") 
            var inputDateFin = document.createElement('INPUT'); 
            inputDateFin.id = "inputPrevisionnel"; 
            inputDateFin.setAttribute("class", "form-control"); 
            inputDateFin.setAttribute("type", "text"); 
            inputDateFin.setAttribute("min", 0); 
            inputDateFin.setAttribute("value", item.end); 
        
            var divComment = document.createElement('DIV'); 
            divComment.setAttribute("class", "col-sm-12"); 
            var labelComment = document.createElement('LABEL'); 
            labelComment.innerHTML = translate(locale, "Commentaires", "worked"); 
            labelComment.setAttribute("for", "inputComment"); 
            labelComment.setAttribute("class", "col-form-label") 
            var inputComment = document.createElement('INPUT'); 
            inputComment.id = "inputComment"; 
            inputComment.setAttribute("class", "form-control"); 
            inputComment.setAttribute("type", "text"); 
            inputComment.setAttribute("value", item.title); 
        
            /* BUILD FORM */ 
            /* ROW 01*/ 
            divTitle.appendChild(inputTitle); 
            inputTitle.parentNode.insertBefore(labelTitle, inputTitle); 
        
            divResources.appendChild(inputResources); 
            inputResources.parentNode.insertBefore(labelResources, inputResources); 
        
            //divStatut.appendChild(inputStatut); 
            //inputStatut.parentNode.insertBefore(labelStatut, inputStatut);
        
             divStatut.appendChild(selectStatut); 
             selectStatut.parentNode.insertBefore(labelStatut, selectStatut); 
        
            divForm_row01.appendChild(divTitle); 
            divForm_row01.appendChild(divResources); 
            //divForm_row01.appendChild(divStatut);
            divForm_row01.appendChild(divStatut); 
        
            /* ROW 02 */ 
        
            divDateDeb.appendChild(inputDateDeb); 
            inputDateDeb.parentNode.insertBefore(labelDateDeb, inputDateDeb); 
        
            divDateFin.appendChild(inputDateFin); 
            inputDateFin.parentNode.insertBefore(labelDateFin, inputDateFin); 
        
            divComment.appendChild(inputComment); 
            inputComment.parentNode.insertBefore(labelComment, inputComment); 
        
            divForm_row02.appendChild(divDateDeb); 
            divForm_row02.appendChild(divDateFin); 
            divForm_row02.appendChild(divComment); 
        
            form.appendChild(divForm_row01); 
            form.appendChild(divForm_row02); 

            //form.addEventListener("submit", function (event) {
            // Chaque fois que l'utilisateur tente d'envoyer les données
            // on vérifie que le champ email est valide.
            //if (!selectStatut.value) {
 
                // Et on empêche l'envoi des données du formulaire
                //event.preventDefault();
            //}
            return form;
            //}, false);

             
        } 
        function translate(locale, fr, en) { 
            return locale === "fr" ? fr : en; 
        } 

        document.getElementById('semaine').onclick = function() {
        timeline.setWindow(new Date(), new Date(1000*60*60*24*7 + (new Date()).valueOf()));
        }
        document.getElementById('jour').onclick = function() {
        timeline.setWindow(new Date(), new Date(1000*60*60*24 + (new Date()).valueOf()));
        }
        document.getElementById('semaine-1').onclick = function() {
        timeline.setWindow(new Date( (new Date()).valueOf())-1000*60*60*24*7,new Date() );
        }
        document.getElementById('semaine+1').onclick = function() {
        timeline.setWindow(new Date(1000*60*60*24*7 + (new Date()).valueOf()), new Date(1000*60*60*24*14 + (new Date()).valueOf()));
        }
    </script>
<div class="sweet-overlay" tabindex="-1" style="opacity: -0.02; display: none;"></div><div class="sweet-alert hideSweetAlert" data-custom-class="" data-has-cancel-button="true" data-has-confirm-button="true" data-allow-outside-click="false" data-has-done-function="true" data-animation="pop" data-timer="null" style="display: none; margin-top: -200px; opacity: -0.01;"><div class="sa-icon sa-error" style="display: none;">
      <span class="sa-x-mark">
        <span class="sa-line sa-left"></span>
        <span class="sa-line sa-right"></span>
      </span>
    </div><div class="sa-icon sa-warning" style="display: block;">
      <span class="sa-body"></span>
      <span class="sa-dot"></span>
    </div><div class="sa-icon sa-info" style="display: none;"></div><div class="sa-icon sa-success" style="display: none;">
      <span class="sa-line sa-tip"></span>
      <span class="sa-line sa-long"></span>

      <div class="sa-placeholder"></div>
      <div class="sa-fix"></div>
    </div><div class="sa-icon sa-custom" style="display: none;"></div><h2>Move item</h2>
    <p style="display: block;">Do you really want to move the item to<br>start: Tue Apr 23 2013 00:00:00 GMT+0200 (heure d’été d’Europe centrale)<br>end: undefined?</p>
    <fieldset>
      <input type="text" tabindex="3" placeholder="">
      <div class="sa-input-error"></div>
    </fieldset><div class="sa-error-container">
      <div class="icon">!</div>
      <p>Not valid!</p>
    </div><div class="sa-button-container">
      <button class="cancel" tabindex="2" style="display: inline-block;">Cancel</button>
      <div class="sa-confirm-button-container">
        <button class="confirm" tabindex="1" style="display: inline-block; background-color: rgb(221, 107, 85); box-shadow: rgba(221, 107, 85, 0.8) 0px 0px 2px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px inset;">OK</button><div class="la-ball-fall">
          <div></div>
          <div></div>
          <div></div>
        </div>
      </div>
    </div></div>
{% endblock %}
{% block mesJavascripts %}

{%endblock%}